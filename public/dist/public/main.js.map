{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/all-pets/all-pets.component.css","webpack:///./src/app/all-pets/all-pets.component.html","webpack:///./src/app/all-pets/all-pets.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/create/create.component.css","webpack:///./src/app/create/create.component.html","webpack:///./src/app/create/create.component.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/pet/pet.component.css","webpack:///./src/app/pet/pet.component.html","webpack:///./src/app/pet/pet.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FsbC1wZXRzL2FsbC1wZXRzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <p>These pets are looking for a home!</p>\\n  <a [routerLink]=\\\"['/create']\\\">Add a pet to the shelter</a>\\n  <table class=\\\"table table-bordered table-striped\\\">\\n    <thead>\\n      <tr>\\n        <th>Name</th>\\n        <th>Type</th>\\n        <th>Actions</th>\\n      </tr>\\n    </thead>\\n\\n    <tbody>\\n      <tr *ngFor=\\\"let pet of allPets\\\">\\n        <td>{{pet.name}}</td>\\n        <td>{{pet.petType}}</td>\\n        <td><button class=\\\"btn btn-success ml-2\\\" (click)=\\\"details(pet._id)\\\">Details</button><button class=\\\"btn btn-primary ml-3\\\"\\n            (click)=\\\"edit(pet._id)\\\">Edit</button></td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\nimport { HttpService } from \"./../http.service\";\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n@Component({\n  selector: 'app-all-pets',\n  templateUrl: './all-pets.component.html',\n  styleUrls: ['./all-pets.component.css']\n})\nexport class AllPetsComponent implements OnInit {\n  allPets: any = null;\n  constructor(private _router: Router, private _route: ActivatedRoute, private _httpService: HttpService) { }\n\n  ngOnInit() {\n    this.findAllPets();\n  }\n\n  findAllPets() {\n    let obs = this._httpService.getAllPets();\n    obs.subscribe(data => {\n      this.allPets = data;\n    })\n  }\n  edit(id) {\n    this._router.navigateByUrl('/pets/edit/' + id);\n  }\n  details(id) {\n    this._router.navigateByUrl('/pets/' + id);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CreateComponent } from './create/create.component'\nimport { AllPetsComponent } from './all-pets/all-pets.component'\nimport { PetComponent } from './pet/pet.component'\nimport { EditComponent } from './edit/edit.component'\nconst routes: Routes = [\n  { path: 'pets', component: AllPetsComponent },\n  { path: 'create', component: CreateComponent },\n  { path: 'pets/:id', component: PetComponent },\n  { path: 'pets/edit/:id', component: EditComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<head>\\n  <title>Pets</title>\\n  <link rel=\\\"stylesheet\\\" href=\\\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\\\" integrity=\\\"sha384-WskhaSGFgHYWDcbwN70/dfYBj47jz9qbsMId/iRN3ewGhXQFZCSftd1LZCfmhktB\\\"\\n    crossorigin=\\\"anonymous\\\" />\\n\\n  <script src=\\\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\\\"></script>\\n</head>\\n\\n<body>\\n  <div class=\\\"container\\\">\\n\\n    <h1 class=\\\"display-4\\\">Pet Shelter</h1>\\n  </div>\\n</body>\\n\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\nimport { HttpService } from \"./http.service\";\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(private _httpService: HttpService) { }\n  ngOnInit() {\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule } from \"@angular/forms\";\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpService } from \"./http.service\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AppComponent } from './app.component';\nimport { CreateComponent } from './create/create.component';\nimport { PetComponent } from './pet/pet.component';\nimport { EditComponent } from './edit/edit.component';\nimport { AllPetsComponent } from './all-pets/all-pets.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateComponent,\n    PetComponent,\n    EditComponent,\n    AllPetsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule, HttpClientModule, FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZS9jcmVhdGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <h3 class=\\\"display-5\\\">Know of a pet needing a home?</h3>\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n      <div *ngIf=\\\"error\\\">\\n        <p>{{error.message}}</p>\\n      </div>\\n      <form (submit)=\\\"addPet()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Pet Name:</label>\\n          <input type=\\\"text\\\" name=\\\"newPet.name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newPet.name\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Pet type:</label>\\n          <input type=\\\"text\\\" name=\\\"newPet.petType\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newPet.petType\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Description:</label>\\n          <input type=\\\"text\\\" name=\\\"newPet.desc\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newPet.desc\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Skills: </label>\\n          <div class=\\\"form-group\\\">\\n            <label>Skill 1: <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"newPet.skill[0].skill1\\\" [(ngModel)]=\\\"newPet.skill[0].skill1\\\"></label>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Skill 2: <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"newPet.skill[0].skill2\\\" [(ngModel)]=\\\"newPet.skill[0].skill2\\\"></label>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Skill 3: <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"newPet.skill[0].skill3\\\" [(ngModel)]=\\\"newPet.skill[0].skill3\\\"></label>\\n          </div>\\n        </div>\\n        <button class=\\\"btn btn-primary mt-3 mb-3\\\" type=\\\"submit\\\">Add Pet</button>\\n        <button class=\\\"btn btn-primary mt-3 mb-3 ml-3\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n      </form>\\n\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from \"./../http.service\";\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n  newPet: any;\n  error: any = null;\n  constructor(private _router: Router, private _route: ActivatedRoute, private _httpService: HttpService) { }\n\n  ngOnInit() {\n    this.newPet = { petType: \"\", name: \"\", desc: \"\", skill: [{ skill1: \"\", skill2: \"\", skill3: \"\" }] }\n  }\n  cancel() {\n    this._router.navigateByUrl('/pets');\n  }\n  addPet() {\n    let obs = this._httpService.createPet(this.newPet);\n    obs.subscribe(data => {\n      if (data['errors']) {\n        this.error = data;\n      }\n      else {\n        this.cancel();\n        console.log(data);\n      }\n    })\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQvZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <h3 class=\\\"display-4\\\">Edit this pet</h3>\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n      <div *ngIf=\\\"error\\\">\\n        <p class=\\\"text-muted\\\">{{error.message}}</p>\\n      </div>\\n      <form (submit)=\\\"update()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Pet name:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"editPet.name\\\" [(ngModel)]=\\\"editPet.name\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Pet type: </label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"editPet.petType\\\" [(ngModel)]=\\\"editPet.petType\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Description</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"editPet.desc\\\" [(ngModel)]=\\\"editPet.desc\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Skills (optional): </label>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <label class=\\\"ml-4\\\">Skill 1: </label>\\n          <input type=\\\"text\\\" class=\\\"ml-2 form-control\\\" name=\\\"editPet.skill[0].skill1\\\" [(ngModel)]=\\\"editPet.skill[0].skill1\\\">\\n        </div>\\n        <div class=\\\"row\\\">\\n          <label class=\\\"ml-4\\\">Skill 2: </label>\\n          <input type=\\\"text\\\" class=\\\"ml-2 form-control\\\" name=\\\"editPet.skill[0].skill2\\\" [(ngModel)]=\\\"editPet.skill[0].skill2\\\">\\n        </div>\\n        <div class=\\\"row\\\">\\n          <label class=\\\"ml-4\\\">Skill 3: </label>\\n          <input type=\\\"text\\\" class=\\\"ml-2 form-control\\\" name=\\\"editPet.skill[0].skill3\\\" [(ngModel)]=\\\"editPet.skill[0].skill3\\\">\\n        </div>\\n        <button class=\\\"btn btn-success mt-3 ml-4\\\" type=\\\"submit\\\">Edit Pet</button>\\n        <button class=\\\"btn btn-success mt-3 ml-3\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { HttpService } from \"./../http.service\";\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  constructor(private _router: Router, private _route: ActivatedRoute, private _httpService: HttpService) { }\n  id: any;\n  editPet: any;\n  error: any = null;\n  ngOnInit() {\n    this.editPet = { petType: \"\", name: \"\", desc: \"\", skill: [{ skill1: \"\", skill2: \"\", skill3: \"\" }] }\n    this._route.params.subscribe(params => {\n      this.id = params.id;\n      this.findEditPet(this.id);\n    })\n\n  }\n  findEditPet(id) {\n    let obs = this._httpService.findPet(id);\n    obs.subscribe(data => {\n      this.editPet = data;\n    })\n  }\n  update() {\n    let obs = this._httpService.editPet(this.editPet);\n    obs.subscribe(data => {\n      if (data['errors']) {\n        this.error = data;\n        console.log(this.error);\n      }\n      else {\n        this.cancel();\n      }\n    })\n  }\n  cancel() {\n    this._router.navigateByUrl('/pets');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private _http: HttpClient) { }\n\n  getAllPets() {\n    return this._http.get(\"/api/allPets\");\n  }\n  createPet(newPet) {\n    return this._http.post(\"/api/newPet\", newPet);\n  }\n  findPet(id) {\n    return this._http.get(\"/api/\" + id);\n  }\n  like(id) {\n    return this._http.put(\"/api/like/\" + id, null);\n  }\n  adopt(id) {\n    return this._http.delete(\"/api/\" + id);\n  }\n  editPet(editPet) {\n    return this._http.put(\"/api/\" + editPet._id, editPet);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BldC9wZXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div *ngIf=\\\"pet\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header display-2\\\">Details about {{pet.name}}</div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"d-flex flex-row-reverse\\\">\\n          <button class=\\\"btn btn-success\\\" (click)=\\\"home()\\\">Home</button>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-4\\\">\\n            <h4 class=\\\"display-5\\\">Pet Type:</h4>\\n          </div>\\n          <div class=\\\"col-6\\\">\\n            <p class=\\\"text-left\\\">{{pet.petType}}</p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-4\\\">\\n            <h4 class=\\\"display-5\\\">Description:</h4>\\n          </div>\\n          <div class=\\\"col-6\\\">\\n            <p class=\\\"text-left\\\">{{pet.desc}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-4\\\">\\n            <h4 class=\\\"display-5\\\">Skills:</h4>\\n          </div>\\n          <div class=\\\"col-6\\\">\\n            <div *ngIf=\\\"pet.skill[0].skill1\\\">\\n              <div class=\\\"row\\\">\\n                <p class=\\\"text-left ml-3\\\">\\n                  {{pet.skill[0].skill1}}</p>\\n              </div>\\n            </div>\\n            <div *ngIf=\\\"pet.skill[0].skill2\\\">\\n              <div class=\\\"row\\\">\\n                <p class=\\\"text-left ml-3\\\">{{pet.skill[0].skill2}}</p>\\n              </div>\\n            </div>\\n            <div *ngIf=\\\"pet.skill[0].skill3\\\">\\n              <div class=\\\"row\\\">\\n                <p class=\\\"text-left ml-3\\\">{{pet.skill[0].skill3}}</p>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-4\\\">\\n            <h4 class=\\\"display-5\\\">Likes:</h4>\\n          </div>\\n          <div class=\\\"col-6\\\">\\n            <p>{{pet.likes}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div *ngIf=\\\"count == 0\\\">\\n            <button class=\\\"btn btn-primary mt-2 ml-3\\\" (click)=\\\"like(pet._id)\\\">Like this pet</button>\\n          </div>\\n          <button class=\\\"btn btn-success mt-2 ml-5\\\" (click)=\\\"adopt(pet._id)\\\">Adopt this pet!</button>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { HttpService } from \"./../http.service\";\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n@Component({\n  selector: 'app-pet',\n  templateUrl: './pet.component.html',\n  styleUrls: ['./pet.component.css']\n})\nexport class PetComponent implements OnInit {\n  id: any;\n  pet: any = null;\n  count: any;\n  constructor(private _router: Router, private _route: ActivatedRoute, private _httpService: HttpService) { }\n\n  ngOnInit() {\n    this._route.params.subscribe(params => {\n      this.id = params.id;\n      this.findPet(this.id);\n      this.count = 0;\n    })\n  }\n\n  findPet(id) {\n    let obs = this._httpService.findPet(id);\n    obs.subscribe(data => {\n      console.log(\"found pet\", data);\n      this.pet = data;\n    })\n  }\n  like(id) {\n    let obs = this._httpService.like(id);\n    obs.subscribe(data => {\n      this.count = 1;\n      this.findPet(id);\n    })\n  }\n  adopt(id) {\n    let obs = this._httpService.adopt(id);\n    obs.subscribe(data => {\n      this._router.navigateByUrl('/pets');\n    })\n  }\n  home() {\n    this._router.navigateByUrl('/pets')\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}